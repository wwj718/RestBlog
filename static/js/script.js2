// Generated by CoffeeScript 1.5.0-pre
var TodoList, TodoModel, TodoView,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

TodoView = (function(_super) {

  __extends(TodoView, _super);

  function TodoView() {
    this.unrender = __bind(this.unrender, this);
    this.render = __bind(this.render, this);
    this.modifyItem = __bind(this.modifyItem, this);
    this.removeItem = __bind(this.removeItem, this);    return TodoView.__super__.constructor.apply(this, arguments);
  }

  TodoView.prototype.events = {
    "click .delete": "removeItem",
    "click .text": "modifyItem"
  };

  TodoView.prototype.initialize = function() {
    this.model.bind('change', this.render);
    return this.model.bind('destroy', this.unrender);
  };

  TodoView.prototype.removeItem = function() {
    return this.model.destroy();
  };

  TodoView.prototype.modifyItem = function() {
    var new_value;
    new_value = window.prompt("sometext", "defaultvalue");
    this.model.set('description', new_value);
    return this.model.save();
  };

  TodoView.prototype.render = function() {
    $(this.el).html("<p><span class='text'>" + (this.model.get('id')) + ":" + (this.model.get('description')) + "</span><span class='delete'>x</span></p>");
    return this;
  };

  TodoView.prototype.unrender = function() {
    return this.el.remove();
  };

  return TodoView;

})(Backbone.View);

TodoModel = (function(_super) {

  __extends(TodoModel, _super);

  function TodoModel() {
    this.render = __bind(this.render, this);    return TodoModel.__super__.constructor.apply(this, arguments);
  }

  TodoModel.prototype.render = function() {
    var myview;
    myview = new TodoView({
      model: this
    });
    return $(".contents").append(myview.render().el);
  };

  return TodoModel;

})(Backbone.Model);

TodoList = (function(_super) {

  __extends(TodoList, _super);

  function TodoList() {
    this.initialize = __bind(this.initialize, this);    return TodoList.__super__.constructor.apply(this, arguments);
  }

  TodoList.prototype.model = TodoModel;

  TodoList.prototype.url = "/todos/";

  TodoList.prototype.initialize = function() {
    this.bind('add', function(item) {
      return item.render();
    });
    this.bind('reset', function(item) {
      var todo, _i, _len, _ref, _results;
      _ref = item.models;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        todo = _ref[_i];
        _results.push(todo.render());
      }
      return _results;
    });
    return this.fetch();
  };

  return TodoList;

})(Backbone.Collection);

$(function() {
  window.todolist = new TodoList();
  return $("button").click(function() {
    return window.todolist.create(new TodoModel({
      description: $("input").val()
    }));
  });
});
